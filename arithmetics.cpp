#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
	/* Упражнение 1
	* Дано целое трехзначное число. Найдите сумму его цифр.
	* Тестовые данные			Ожидаемый результат
	* 111						3
	* 999						27
	* 123						6
	* 321						6
	* 528						15
	*/


	/*int num;
cin >> num;
	int sot = num / 100;
	int des = num % 100 / 10;
	int ed = num % 10;
	int sum = sot + des + ed;
	cout << sum << endl;*/
	
/*
* Упражнение 2
* Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени.
* Известно, что второй момент времени наступил не раньше первого.
* Определите, сколько секунд прошло между двумя моментами времени.
* Тестовые данные			Ожидаемый резульат
* 1 1 1 2 2 2				3661
* 2 20 20 3 20 20			3600
* 23 30 00 23 59 59			1799
*/
	//int hour;
	//cin >> hour;	
	//	int min;
	//	cin >> min;
	//	int sec;
	//	cin >> sec;


	//	int hour2;
	//	cin >> hour2;
	//	int min2;
	//	cin >> min2;
	//	int sec2;
	//	cin >> sec2;

	//	int sumsec = hour * 3600 + min * 60 + sec;

	//	int sumsec2 = hour2 * 3600 + min2 * 60 + sec2;

	//	cout << sumsec2 - sumsec << endl;

/* Упражнение 3
Посчитать Юлианскую дату
Пользователь вводит дату в формате день, месяц, год
Вывести в консоль рассчитанную Юлианскую дату
https://ru.wikipedia.org/wiki/%D0%AE%D0%BB%D0%B8%D0%B0%D0%BD%D1%81%D0%BA%D0%B0%D1%8F_%D0%B4%D0%B0%D1%82%D0%B0
раздел "Вычисление номера юлианского дня (JDN) по дате григорианского календаря"
Тестовые данные				Ожидаемый результат
1 12 2018					    2458454
1 1 2018					    2458120
1 6 2000					    2451697
21 12 2012					  2456283
*/

//int day;
//cin >> day;	
//	int month;
//	cin >> month;
//	int year;
//	cin >> year;
//
//	int a = (14 - month) / 12;
//	int y = year + 4800 - a;
//	int m = month + 12 * a - 3;
//	cout << day + (153 * m + 2) / 5 + 365 * y + y / 4 - y / 100 + y / 400 - 32045 << endl;


/* Упражнение 4
* Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59),
* то есть сначала записывается количество часов, потом обязательно двузначное количество минут,
* затем обязательно двузначное количество секунд.
* Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
* Тестовые данные		Ожидаемый результат
* 10					      0:00:10
* 122					      0:02:02
* 1220					    0:20:20
* 12200					    3:23:20
* 86000					    23:53:20
*/
	/*int time;
	cin >> time;
	
	int hour = time / 3600;
	int min = time % 3600 /60;
	int sec = time % 60;
	cout << hour<< ':'<< min<<':'<< sec << endl;*/


/* Упражнение 5
* На вход дается натуральное число N. Выведите следующее за ним четное число
* Тестовые данные		Ожидаемый результат
* 5						6
* 6						8
* 0						2
* 111					112
* 112					114
*/
	/*int N;
	cin >> N;
	cout << (N + 2) / 2 * 2 << endl;*/

/* Упражнение 6
* Дано четырехзначное число. Определите, является ли его десятичная запись симметричной.
* Если число симметричное, то выведите 1, иначе выведите любое другое целое число.
* Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
* Тестовые данные			Ожидаемый результат
* 2002						1
* 2018						не 1
* 42						  не 1
* 220						  1
* 9999						1
*/

int N;
cin >> N;
int a = N / 1000;
int b =N % 1000 /100;
int c = N % 1000 % 100 /10;
int d = N % 10;
cout << (a - d + 1) * (b - c + 1) << endl;

/* Дополнительное упражнение (будет оцениваться отдельно)
* Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
* На какой день улитка доползет до вершины шеста?
* Тестовые данные		Ожидаемый результат
*  H	A	B
* 10	3	2			8
* 11	4	2			5
* 80	7	3			20
*/
}